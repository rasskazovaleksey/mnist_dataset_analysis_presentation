[
  {
    "model": "LogisticRegression",
    "params": {
      "penalty": [
        null,
        "l2"
      ],
      "solver": [
        "lbfgs",
        "sag",
        "saga"
      ],
      "C": [
        0.001,
        0.01,
        0.1,
        1.0,
        10,
        100
      ],
      "max_iter": [10000]
    }
  },
  {
    "model": "KNeighborsClassifier",
    "params": {
      "n_neighbors": [1, 2, 3, 5, 8, 13, 21],
      "p": [1,2],
      "weights": [
        "uniform",
        "distance"
      ]
    }
  },
  {
    "model": "GaussianNB",
    "params": {
      
    }
  },
  {
    "model": "DecisionTreeClassifier",
    "params": {
      "criterion": [
        "gini",
        "entropy",
        "log_loss"
      ],
      "splitter": [
        "best",
        "random"
      ],
      "max_depth": [
        null,
        10,
        20,
        30,
        50,
        100,
        200
      ]
    }
  },
  {
    "model": "RandomForestClassifier",
    "params": {
      "criterion": [
        "gini",
        "entropy",
        "log_loss"
      ],
      "max_depth": [
        null,
        10,
        20,
        30,
        50,
        100,
        200
      ]
    }
  },
  {
    "model": "SVC",
    "params": {
      "C": [
        0.001,
        0.01,
        0.1,
        1.0,
        10,
        100
      ],
      "kernel": [
        "poly",
        "rbf",
        "sigmoid"
      ]
    }
  }
]